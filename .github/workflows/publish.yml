name: publish

on:
  push:
    branches:
      - release
  workflow_dispatch:

jobs:
  publish-android:
    name: Build Android (Tauri)
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      # Java for Gradle
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      # Android SDK (gives you sdkmanager + ANDROID_SDK_ROOT)
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: ''  # we'll install what we need below

      # Install SDK/NDK/CMake + accept licenses
      - name: Install Android packages
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0" "cmake;3.22.1" || true
          sdkmanager --install "ndk;26.3.11579264" || sdkmanager --install "ndk;26.1.10909125"
          yes | sdkmanager --licenses >/dev/null

      # >>> Fix: Export NDK env vars (some tools require NDK_HOME specifically)
      - name: Resolve NDK path & export env
        run: |
          set -euo pipefail
          NDK_DIR=$(ls -d "$ANDROID_SDK_ROOT/ndk/"* 2>/dev/null | sort -V | tail -n1 || true)
          if [ -z "${NDK_DIR:-}" ]; then
            echo "::error::No NDK found under $ANDROID_SDK_ROOT/ndk after installation."
            exit 1
          fi
          echo "Using NDK at: $NDK_DIR"
          {
            echo "ANDROID_NDK_HOME=$NDK_DIR"
            echo "NDK_HOME=$NDK_DIR"
            echo "ANDROID_NDK_ROOT=$NDK_DIR"
            echo "ANDROID_NDK=$NDK_DIR"
          } >> "$GITHUB_ENV"

      # Bun (your repo uses Bun)
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      - name: Install frontend deps
        run: bun install

      # Rust + Android targets
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      - name: Add Rust Android targets
        run: |
          rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      # Optional: Gradle cache for speed
      - name: Setup Gradle cache
        uses: gradle/actions/setup-gradle@v4

      # Sanity check: ensure the Android project exists
      - name: Check Android project exists
        run: |
          test -d src-tauri/gen/android || {
            echo "::error::Missing src-tauri/gen/android. Run 'tauri android init' locally and commit the generated project.";
            exit 1;
          }

      # Build APKs (per ABI). Use --aab for Play Store bundles.
      - name: Build APKs
        env:
          RUST_BACKTRACE: 1
          TAURI_CLI_LOG: trace
        run: bunx tauri android build --apk --split-per-abi -t aarch64

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: android-artifacts
          path: |
            src-tauri/gen/android/app/build/outputs/**/*.apk
            src-tauri/gen/android/app/build/outputs/**/*.aab
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
